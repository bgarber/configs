function tmux-picocom() {
    tmux has-session -t "picocom" &> /dev/null
    if [ $? -eq 0 ]; then
        echo "Already running a picocom session?"
    else
        tmux new-session -s "picocom" -d
        sleep 1
        tmux send-keys "picocom -b 115200 /dev/ttyUSB0" C-m
        tmux split-window -v
        sleep 1
        tmux send-keys "picocom -b 115200 /dev/ttyUSB1" C-m

        tmux attach -t "picocom"
    fi
}

function compile() {
    comp_silent=""
    comp_fullsave=false
    comp_out=compile.log

    if [[ $# -ne 0 ]]; then
        targets=""
        verbose=false

        while [[ $# > 0 ]]; do
            key="$1"

            case $key in
                -h|--help)
                    echo "Compile by Bryan Garber (c) 2015"
                    echo " Usage: $0 [-f -h -s -v] [<package_name>]"
                    echo ""
                    echo "   -f | --full-save   Save ALL compilation process" \
                         "to log file"
                    echo "   -h | --help        Prints this help message"
                    echo "   -s | --silent      Calls make in silent mode"
                    echo "   -v | --verbose     Display ALL output in stdout"
                    return
                    ;;
                -f|--full-save)
                    comp_fullsave=true
                    shift
                    ;;
                -s|--silent)
                    comp_silent=-s
                    shift
                    ;;
                -v|--verbose)
                    comp_out=/dev/stdout
                    verbose=true
                    shift
                    ;;
                *)
                    targets="$targets $1"
                    shift
                    ;;
            esac
        done

        if ! $verbose; then
            echo "" > $comp_out
        fi

        if [[ "$targets" != "" ]]; then
            if $comp_fullsave; then
                bash -c "make $comp_silent $targets" &> $comp_out
            else
                bash -c "make $comp_silent $targets" > $comp_out
            fi
        fi
    else
        echo "" > $comp_out
    fi

    if $comp_fullsave; then
        bash -c "make $comp_silent" &>> $comp_out
    else
        bash -c "make $comp_silent" >> $comp_out
    fi

    if [[ $? -eq 0 ]]; then
        echo "==================================="
        echo " BUILD SUCCESS... "
        bash -c "make deploy"
    else
        echo "==================================="
        echo " BUILD FAILURE... "
    fi
}
